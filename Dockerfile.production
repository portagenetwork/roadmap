FROM ruby:3.1.4

# Setup bundle to install gems to volume
ENV BUNDLE_PATH=/bundle/ \
    BUNDLE_BIN=/bundle/bin \
    GEM_HOME=/bundle \
    DEBIAN_FRONTEND="noninteractive"
ENV Path="${BUNDLE_BIN}:${PATH}"



# Install apache and  dependencies
RUN apt-get update && \
    apt-get install -y apache2 apache2-dev nodejs

# # Add Phusion's APT repository to the system
# RUN curl -LSs https://www.phusionpassenger.com/keys/PHUSION-GPG-KEY.pub | gpg --dearmor -o /usr/share/keyrings/phusion-archive-keyring.gpg && \
#     echo deb [signed-by=/usr/share/keyrings/phusion-archive-keyring.gpg] https://oss-binaries.phusionpassenger.com/apt/passenger $(lsb_release -cs) main > /etc/apt/sources.list.d/passenger.list && \
#     apt-get update

# # Install Passenger
# RUN apt-get install -y --no-install-recommends passenger

# # Enable Passenger module for Apache
# RUN sed -i '/# passenger_module/c\LoadModule passenger_module /usr/lib/apache2/modules/mod_passenger.so' /etc/apache2/mods-available/passenger.load && \
#     a2enmod passenger


RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \
    curl -sL https://deb.nodesource.com/setup_16.x | bash && \
    echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list


# Dependancies
RUN apt-get update -qq && \
  apt-get install --no-install-recommends -y \
  default-mysql-client \
  gettext \
  nodejs \
  yarn \
  locales

ENV LANG=fr_CA.UTF-8 \
    LANGUAGE=fr_CA:fr \ 
    LC_ALL=fr_CA.UTF-8 

# # Set environment variables for apache passenger
# ENV APU_CONFIG=/usr/local/apr-util/bin/apu-1-config \
#     APR_CONFIG=/usr/local/apr-1.5.2/bin/apr-1-config \
#     HTTPD=/usr/local/apache/bin/httpd \
#     APXS2=/usr/local/apache/bin/apxs

# # Install Passenger module for Apache
# RUN /bin/bash -l -c "passenger-install-apache2-module --auto"

# # Cleanup
# RUN apt-get clean && rm -rf /var/lib/apt/lists/*

RUN wget --quiet https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.3/wkhtmltox-0.12.3_linux-generic-amd64.tar.xz && \
    tar vxf wkhtmltox-0.12.3_linux-generic-amd64.tar.xz && \
    cp wkhtmltox/bin/wk* /usr/local/bin/ && \
    rm -rf wkhtmltox

ARG INSTALL_PATH=/usr/src/app/
ENV INSTALL_PATH $INSTALL_PATH

WORKDIR $INSTALL_PATH
COPY Gemfile* $INSTALL_PATH
# Install Bundler with the specified version from Gemfile.lock
RUN gem install bundler -v "$(tail -1 Gemfile.lock | tr -d " ")"

# for 3.1.0 test, need both mysql and psql group installed
RUN bundle config --local build.sassc --disable-march-tune-native
RUN bundle config set --local without 'development pssql test thin aws ci' 
RUN RAILS_ENV=production bundle install --jobs=3 --retry=3

COPY . $INSTALL_PATH
RUN NODE_ENV=production yarn install --prod --check-files
RUN bundle config set force_ruby_platform true

# /bundle/ruby/2.7.0/bin/rake error: Could not find nokogiri-1.13.6, mini_portile2-2.5.3 in locally installed gems (Bundler::GemNotFound)
RUN bundle update rake 
RUN DATABASE_URL=nulldb://user:test@127.0.0.1/roadmap RAILS_ENV=production SECRET_KEY_BASE=change_me DEVISE_SECRET_KEY=pickasecuretoken bundle exec rake assets:precompile

# Configure Apache
COPY apache/dev.dmp-pgd.conf /etc/apache2/sites-available/
RUN a2enmod headers
RUN a2enmod proxy proxy_http rewrite
RUN a2ensite dev.dmp-pgd


# Expose ports
EXPOSE 80

# Start Apache
CMD ["apachectl", "-D", "FOREGROUND"]

# CMD bundle exec puma -C config/puma.rb

# # Apache
# COPY httpd-2.4.23.tar.gz /usr/local/
# RUN cd /usr/local/httpd-2.4.23 && ./configure --enable-shared=max --enable-module=all --enable-systemd --prefix=/usr/local/apache --with-apr=/usr/local/apr-1.5.2 --with-apr-util=/usr/local/apr-util --with-pcre=/usr/local/pcre && make -j8 && make install

# RUN echo 'LD_LIBRARY_PATH=/usr/local/pgsql/lib:/usr/local/apr-1.5.2/lib:/usr/local/apr-util/lib:/usr/local/pcre/lib' >> /etc/profile.d/lib_common_env.sh
# RUN echo 'export LD_LIBRARY_P/profile.d/lib_common_envATH' >> /etc/profile.d/lib_common_env.sh
# RUN echo 'PATH=/usr/local/lib:/usr/local/pgsql/bin:$PATH' >> /etc/profile.d/lib_common_env.sh
# RUN echo 'export PATH' >> /etc/profile.d/lib_common_env.sh
# RUN echo 'MANPATH=/usr/local/pgsql/man:$MANPATH' >> /etc.sh
# RUN echo 'export MANPATH' >> /etc/profile.d/lib_common_env.s

# RUN groupadd apache
# RUN useradd -g apache apache
# RUN sed -i -e 's/User daemon/User apache/g' /usr/local/apache/conf/httpd.conf
# RUN sed -i -e 's/Group daemon/Group apache/g' /usr/local/apache/conf/httpd.conf
# RUN chown -R apache.apache /usr/local/apache/htdocs/

